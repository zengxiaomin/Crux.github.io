{"total":4,"pageSize":10,"pageCount":1,"data":[{"title":"框架知识点04","slug":"xiao04","date":"2018-03-11T04:46:13.923Z","updated":"2018-03-11T05:08:01.461Z","comments":true,"path":"api/articles/xiao04.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"一、路由模块\"><a href=\"#一、路由模块\" class=\"headerlink\" title=\"一、路由模块\"></a>一、路由模块</h3><figure class=\"highlight plain\"><figcaption><span>就是建立起url和页面之间的映射关系</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1、SPA的基本概念和工作原理</span><br><span class=\"line\"></span><br><span class=\"line\">\tSPA：single page application 单一页面应用程序，只有一个完整的页面；它在加载页面时，不会加载整个页面，而是只更新某个指定的容器中内容。</span><br><span class=\"line\">\t比如Gmail、移动的webApp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t工作原理：</span><br><span class=\"line\">\t①解析地址栏</span><br><span class=\"line\">\t\t完整的页面地址、路由地址</span><br><span class=\"line\">\t②根据路由地址 从路由词典中找到真正的要加载的页面</span><br><span class=\"line\">\t③发起ajax请求</span><br><span class=\"line\">\t\t请求要加载的页面</span><br><span class=\"line\">\t④像指定的容器中 插入加载来的页面</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2、路由模块的基本使用</span><br><span class=\"line\">\t专业术语：</span><br><span class=\"line\">\t\trouter路由器</span><br><span class=\"line\">\t\troute路由</span><br><span class=\"line\">\t\troutes 路由数组（路由词典）</span><br><span class=\"line\">\t①引入vue.js vue-router.js</span><br><span class=\"line\">\t②指定一个容器</span><br><span class=\"line\">\t&lt;router-view&gt;&lt;/router-view&gt;</span><br><span class=\"line\">\t③创建业务所需要用到的组件类</span><br><span class=\"line\">        \tvar MyLogin = Vue.component()</span><br><span class=\"line\">\t④配置路由词典</span><br><span class=\"line\">\t const myRoutes = [</span><br><span class=\"line\">\t  &#123;path:&apos;&apos;,component:MyLogin&#125;,</span><br><span class=\"line\">\t  &#123;path:&apos;/login&apos;,component:MyLogin&#125;</span><br><span class=\"line\">\t ];</span><br><span class=\"line\"></span><br><span class=\"line\">\t const myRouter = new VueRouter(&#123;</span><br><span class=\"line\">\t  routes:myRoutes</span><br><span class=\"line\">\t &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t new Vue(&#123;</span><br><span class=\"line\">\t   router:myRouter</span><br><span class=\"line\">\t &#125;)</span><br><span class=\"line\">\t⑤测试</span><br><span class=\"line\">\t\t修改地址栏中的路由地址，测试看加载的组件是否正确</span><br><span class=\"line\"></span><br><span class=\"line\">\t注意事项：</span><br><span class=\"line\">\t ①先引入vue，再引入插件</span><br><span class=\"line\">\t ②一定要指定router-view</span><br><span class=\"line\">\t ③route路由 &#123;path:&apos;&apos;,component:&#125;</span><br><span class=\"line\">\t  routes 路由数组 []</span><br><span class=\"line\">\t  router 路由器:按照指定的路由规则去访问对应的组件 new VueRouter</span><br><span class=\"line\"></span><br><span class=\"line\">\t练习：demo02_lianxi.html</span><br><span class=\"line\">\t创建一个SPA，有两个组件类，分别是login,main.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3、使用路由模块来实现页面跳转的方式</span><br><span class=\"line\"></span><br><span class=\"line\">\t方式1：直接修改地址栏</span><br><span class=\"line\">\t方式2：js</span><br><span class=\"line\">\tthis.$router.push(‘路由地址’);</span><br><span class=\"line\">\t方式3：</span><br><span class=\"line\">\t &lt;router-link</span><br><span class=\"line\">\t to=&quot;路由地址&quot;&gt;&lt;/router-link&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">4、完成参数的传递</span><br><span class=\"line\">\t在页面之间跳转的时候，在有些场景下，需要同时指定参数</span><br><span class=\"line\"></span><br><span class=\"line\">\t①明确发送方和接收方</span><br><span class=\"line\">\tlist --20--&gt; detail</span><br><span class=\"line\">\t②配置接收方的路由地址</span><br><span class=\"line\">\t/detail --》 /detail/:index</span><br><span class=\"line\"></span><br><span class=\"line\">\tthis.$route.params.index</span><br><span class=\"line\">\t③发送</span><br><span class=\"line\">\trouterLink to=&quot;/detail/20&quot;</span><br><span class=\"line\">\tthis.$router.push(&apos;/detail/20&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t练习：demo05_lianxi.html</span><br><span class=\"line\">\tSPA，有3个组件：</span><br><span class=\"line\">\tcheck/pay/send</span><br><span class=\"line\">\tcheck:button 点击跳转到pay,同时传递商品价格100给pay</span><br><span class=\"line\">\tpay: h1 显示商品价格信息 button 点击跳转send</span><br><span class=\"line\">\tsend: routerLink--&gt;check</span><br><span class=\"line\"></span><br><span class=\"line\">\t步骤1:搭建架子，要求通过不同的url能够访问3个组件</span><br><span class=\"line\">\t步骤2：搞定跳转</span><br><span class=\"line\">\t步骤3：搞定传参</span><br><span class=\"line\">\t\t①明确发送方和接收方</span><br><span class=\"line\">\t\tcheck（发送） pay(接受)</span><br><span class=\"line\">\t\t②配置pay的路由地址</span><br><span class=\"line\">\t\t/pay --&gt; /pay/:price</span><br><span class=\"line\">\t\tthis.$route.params.price</span><br><span class=\"line\">\t\t③跳转的同时发送</span><br><span class=\"line\"></span><br><span class=\"line\">5、路由嵌套</span><br><span class=\"line\">\t在一个路由中，path对应一个component，如果这个component需要根据不同的url再加载其他的component，称之为路由的嵌套</span><br><span class=\"line\"></span><br><span class=\"line\">\t举例：比如A组件现在需要根据不同的url，加载B组件或者C组件</span><br><span class=\"line\">\t①给A组件指定一个容器</span><br><span class=\"line\">\t  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class=\"line\">\t②配置路由词典</span><br><span class=\"line\">\t  &#123;</span><br><span class=\"line\">\t    path:&apos;/a&apos;,</span><br><span class=\"line\">\t    component:A,</span><br><span class=\"line\">\t    children:[</span><br><span class=\"line\">\t      &#123;path:&apos;/b&apos;,component:B&#125;</span><br><span class=\"line\">\t    ]</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t  需求：现在有两个组件，分别是login/mail,建立SPA。</span><br><span class=\"line\">\t  在此基础上，希望mail组件 嵌套inbox/outbox/draft</span><br><span class=\"line\"></span><br><span class=\"line\">\t  补充：在设置子路由，路由匹配规则依然是适用的，只不过路由地址为空和异常，要携带父组件的路由地址</span><br><span class=\"line\">\t  /mail /mail/draft</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、与远程服务器端的通信\"><a href=\"#二、与远程服务器端的通信\" class=\"headerlink\" title=\"二、与远程服务器端的通信\"></a>二、与远程服务器端的通信</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①引入vue-resouce.js</span><br><span class=\"line\">\t②发请求</span><br><span class=\"line\">\t\tthis.<span class=\"variable\">$http</span>.get(url).<span class=\"keyword\">then</span>((result)=&gt;&#123;</span><br><span class=\"line\">\t\t\t//result.data</span><br><span class=\"line\">\t\t&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"一、自定义指令\"><a href=\"#一、自定义指令\" class=\"headerlink\" title=\"一、自定义指令\"></a>一、自定义指令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、创建和使用</span><br><span class=\"line\">   \t Vue.directive(<span class=\"string\">'change'</span>,&#123;</span><br><span class=\"line\">   \t\t<span class=\"built_in\">bind</span>:<span class=\"keyword\">function</span>(el,bindings)&#123;</span><br><span class=\"line\">   \t\t//首次调用</span><br><span class=\"line\">   \t\t&#125;,</span><br><span class=\"line\">   \t\tupdate:<span class=\"keyword\">function</span>(el,bindings)&#123;</span><br><span class=\"line\">   \t\t//只要是有数据变化，都会调用</span><br><span class=\"line\">   \t\t&#125;,</span><br><span class=\"line\">   \t\tunbind:<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">   \t\t//解绑</span><br><span class=\"line\">   \t\t&#125;</span><br><span class=\"line\">   \t &#125;)</span><br><span class=\"line\">   \t &lt;any v-change=<span class=\"string\">\"count\"</span>&gt;&lt;/any&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、搭建基于CLI开发环境的方式\"><a href=\"#三、搭建基于CLI开发环境的方式\" class=\"headerlink\" title=\"三、搭建基于CLI开发环境的方式\"></a>三、搭建基于CLI开发环境的方式</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①指定一个文件夹</span><br><span class=\"line\">②下载安装包拷贝到project（自己指定文件）中</span><br><span class=\"line\">③右键单击压缩包，解压缩到当前文件夹</span><br><span class=\"line\">④进入到环境文件夹</span><br><span class=\"line\">⑤同时按下<span class=\"built_in\">shift</span>和鼠标右键，选择在此位置打开命令行串口</span><br><span class=\"line\">⑥执行npm install</span><br><span class=\"line\">⑦执行npm start</span><br></pre></td></tr></table></figure>\n<h3 id=\"四、项目的大致流程\"><a href=\"#四、项目的大致流程\" class=\"headerlink\" title=\"四、项目的大致流程\"></a>四、项目的大致流程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①需求分析</span><br><span class=\"line\">②可行性分析</span><br><span class=\"line\">③概要设计、详细设计</span><br><span class=\"line\">④编码 ui <span class=\"built_in\">test</span></span><br><span class=\"line\">⑤联合调试 <span class=\"built_in\">test</span></span><br><span class=\"line\">⑥上线</span><br><span class=\"line\">⑦迭代、维护</span><br></pre></td></tr></table></figure>","text":"一、路由模块就是建立起url和页面之间的映射关系1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"框架知识点03","slug":"xiao03","date":"2018-03-11T04:43:51.911Z","updated":"2018-03-11T04:46:38.433Z","comments":true,"path":"api/articles/xiao03.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"一、组件间通信\"><a href=\"#一、组件间通信\" class=\"headerlink\" title=\"一、组件间通信\"></a>一、组件间通信</h3><figure class=\"highlight plain\"><figcaption><span>（props down）</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t①发送</span><br><span class=\"line\">\t\t&lt;son myName=&apos;zhangsan&apos;&gt;</span><br><span class=\"line\">\t\t&lt;/son&gt;</span><br><span class=\"line\">\t②接受</span><br><span class=\"line\">\t\t到son组件：</span><br><span class=\"line\">\t\tVue.component(&apos;son&apos;,&#123;</span><br><span class=\"line\">\t\t  props:[&apos;myName&apos;],</span><br><span class=\"line\">\t\t  template:`</span><br><span class=\"line\">\t\t   &lt;p&gt;&#123;&#123;myName&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">\t\t  `</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t练习：demo02_lianxi.html</span><br><span class=\"line\">\t(-: 10:40)</span><br><span class=\"line\"></span><br><span class=\"line\">\tmy-input</span><br><span class=\"line\">\tmy-button</span><br><span class=\"line\">\tmy-login</span><br><span class=\"line\">2、子与父通信 (events up)</span><br><span class=\"line\">     ①绑定</span><br><span class=\"line\">\tmethods:&#123;</span><br><span class=\"line\">\t handleEvent:function(msg)&#123;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;son @customEvent=&quot;handleEvent&quot;&gt;&lt;/son&gt;</span><br><span class=\"line\">    ②触发</span><br><span class=\"line\">\t子组件内部：</span><br><span class=\"line\">\tthis.$emit(‘customEvent’,100);</span><br><span class=\"line\"></span><br><span class=\"line\">\t练习：综合练习</span><br><span class=\"line\">\tmy-chatroom:一个无序列表 和 两个my-user构成</span><br><span class=\"line\">\tmy-user：label/input/button</span><br><span class=\"line\"></span><br><span class=\"line\">\t①完成组件的创建和使用</span><br><span class=\"line\">\t②调用my-user指定mike lucy (父与子)</span><br><span class=\"line\">\t③点击发送 （子与父）</span><br><span class=\"line\"></span><br><span class=\"line\">3、ref(reference 引用/参考 外号)-----子与父</span><br><span class=\"line\"> 帮助在父组件中 得到子组件中的数据、方法。</span><br><span class=\"line\">\t①指定ref属性</span><br><span class=\"line\">\t&lt;son ref=&quot;mySon&quot;&gt;&lt;/son&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t②根据ref得到子组件实例</span><br><span class=\"line\">\tthis.$refs.mySon</span><br><span class=\"line\"></span><br><span class=\"line\">4、$parent</span><br><span class=\"line\">\tthis.$parent得到父组件的实例</span><br><span class=\"line\"></span><br><span class=\"line\">5、兄弟组件通信</span><br><span class=\"line\">\t①var bus = new Vue();</span><br><span class=\"line\">\t②接收方</span><br><span class=\"line\">\tbus.$on(&apos;eventName&apos;,function(msg)&#123;&#125;)</span><br><span class=\"line\">\t③发送方</span><br><span class=\"line\">\tbus.$emit(&apos;eventName&apos;,123);</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、补充组件创建的方式\"><a href=\"#二、补充组件创建的方式\" class=\"headerlink\" title=\"二、补充组件创建的方式\"></a>二、补充组件创建的方式</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、直接在template属性中指定模板内容</span><br><span class=\"line\">\t\t①全局组件</span><br><span class=\"line\">\t\tVue.component</span><br><span class=\"line\">\t\t②局部组件</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t  components:&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">'my-footer'</span>：&#123;template:``&#125;</span><br><span class=\"line\">\t\t  &#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t2、.vue结尾的文件</span><br><span class=\"line\">\t\t&lt;template&gt;&lt;/template&gt;</span><br><span class=\"line\">\t\t&lt;script&gt;&lt;/script&gt;</span><br><span class=\"line\">\t\t&lt;style&gt;&lt;/style&gt;</span><br><span class=\"line\">\t3、单独指定一个模板内容</span><br><span class=\"line\">\t\t&lt;script</span><br><span class=\"line\">\t\tid=<span class=\"string\">'myContent'</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">type</span>=<span class=\"string\">'text/x-template'</span>&gt;</span><br><span class=\"line\">\t\t&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tVue.component(<span class=\"string\">''</span>,&#123;</span><br><span class=\"line\">\t\t  template:<span class=\"string\">'#myContent'</span></span><br><span class=\"line\">\t\t&#125;)</span><br></pre></td></tr></table></figure>","text":"一、组件间通信（props down）1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<b","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"框架知识点02","slug":"xiao02 ","date":"2018-03-11T04:22:27.082Z","updated":"2018-03-11T06:42:00.853Z","comments":true,"path":"api/articles/xiao02 .json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"总结以上所掌握的指令：\"><a href=\"#总结以上所掌握的指令：\" class=\"headerlink\" title=\"总结以上所掌握的指令：\"></a>总结以上所掌握的指令：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v-for</span><br><span class=\"line\">v-if</span><br><span class=\"line\">v-else-if</span><br><span class=\"line\">v-else</span><br><span class=\"line\">v-on: @</span><br><span class=\"line\">v-bind: :</span><br><span class=\"line\">v-model</span><br><span class=\"line\">v-show</span><br><span class=\"line\">v-html</span><br></pre></td></tr></table></figure>\n<h3 id=\"零、补充：\"><a href=\"#零、补充：\" class=\"headerlink\" title=\"零、补充：\"></a>零、补充：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v-model.number \tv-model.lazy \tv-model.trim</span><br><span class=\"line\"></span><br><span class=\"line\">\tv-on.prevent</span><br><span class=\"line\"></span><br><span class=\"line\">\tv-html</span><br></pre></td></tr></table></figure>\n<h3 id=\"一、自定义指令\"><a href=\"#一、自定义指令\" class=\"headerlink\" title=\"一、自定义指令\"></a>一、自定义指令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、创建和使用</span><br><span class=\"line\">   \t Vue.directive(<span class=\"string\">'change'</span>,&#123;</span><br><span class=\"line\">   \t\t<span class=\"built_in\">bind</span>:<span class=\"keyword\">function</span>(el,bindings)&#123;</span><br><span class=\"line\">   \t\t//首次调用</span><br><span class=\"line\">   \t\t&#125;,</span><br><span class=\"line\">   \t\tupdate:<span class=\"keyword\">function</span>(el,bindings)&#123;</span><br><span class=\"line\">   \t\t//只要是有数据变化，都会调用</span><br><span class=\"line\">   \t\t&#125;,</span><br><span class=\"line\">   \t\tunbind:<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">   \t\t//解绑</span><br><span class=\"line\">   \t\t&#125;</span><br><span class=\"line\">   \t &#125;)</span><br><span class=\"line\">   \t &lt;any v-change=<span class=\"string\">\"count\"</span>&gt;&lt;/any&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、过滤器：\"><a href=\"#二、过滤器：\" class=\"headerlink\" title=\"二、过滤器：\"></a>二、过滤器：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器是针对一些数据 进行筛选、过滤、格式化等相关的处理，变成我们想要的数据</span><br><span class=\"line\"></span><br><span class=\"line\">  过滤器的本质 就是一个带有参数带有返回值的方法</span><br><span class=\"line\"></span><br><span class=\"line\">  Vue1.* 支持内置的过滤器，但是Vue2.* 就不再内置过滤器，但是支持自定义过滤器。</span><br><span class=\"line\"></span><br><span class=\"line\">  1、过滤器的创建和使用</span><br><span class=\"line\">\t①创建</span><br><span class=\"line\">\t   Vue.filter(</span><br><span class=\"line\">\t\t<span class=\"string\">'myFilter'</span>,</span><br><span class=\"line\">\t\t<span class=\"keyword\">function</span>(myInput)&#123;</span><br><span class=\"line\">\t\t   //myInput是在调用过滤器时，管道前表达式执行的结果</span><br><span class=\"line\">\t\t   //针对myInput，按照业务需求做处理</span><br><span class=\"line\">\t\t   //返回</span><br><span class=\"line\">\t\t   <span class=\"built_in\">return</span> <span class=\"string\">'处理后的结果'</span></span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t②使用</span><br><span class=\"line\">\t\t&lt;any&gt;&#123;&#123;expression | myFilter&#125;&#125;&lt;/any&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  2、如何在调用过滤器时，完成参数的发送和接受</span><br><span class=\"line\">\t①发送</span><br><span class=\"line\">\t&lt;any&gt;&#123;&#123;expression | myFilter(参数1，参数2)&#125;&#125;&lt;/any&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t②接受</span><br><span class=\"line\">\tVue.filter(<span class=\"string\">'myFilter'</span>,<span class=\"keyword\">function</span>(myInput，参数1，参数2)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">return</span> <span class=\"string\">'处理后的结果'</span></span><br><span class=\"line\">\t&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、复合组件：\"><a href=\"#三、复合组件：\" class=\"headerlink\" title=\"三、复合组件：\"></a>三、复合组件：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 知识回顾：</span><br><span class=\"line\"> \t  Vue.component(<span class=\"string\">'my-header'</span>,&#123;</span><br><span class=\"line\"> \t    template:`&lt;div&gt;&lt;/div&gt;`</span><br><span class=\"line\"> \t  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"> \t  &lt;my-header&gt;&lt;/my-header&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> \t 复合组件：并不是新的概念，就是一个组件，只不过这个组件中 可以调用其他的组件</span><br><span class=\"line\"></span><br><span class=\"line\"> \t 注意事项：</span><br><span class=\"line\"> \t  ①组件要渲染的内容 取决于在定义组件时template</span><br><span class=\"line\"></span><br><span class=\"line\"> \t  &lt;my-list&gt;</span><br><span class=\"line\"> \t\t&lt;my-item&gt;&lt;/my-item&gt;</span><br><span class=\"line\"> \t  &lt;/my-list&gt;</span><br><span class=\"line\"> \t  效果是出不来的</span><br><span class=\"line\"> \t  ②允许在一个组件中，直接来调用另外一个组件</span><br><span class=\"line\">``` </span><br><span class=\"line\"><span class=\"comment\">### 四、生命周期：</span></span><br><span class=\"line\">``` bash</span><br><span class=\"line\"> 四个阶段：</span><br><span class=\"line\"> \t\tcreate 准备工作 （数据的初始化。。。）</span><br><span class=\"line\"> \t\tmount  挂载前后针对元素进行操作</span><br><span class=\"line\"> \t\tupdate 数据发生变化，</span><br><span class=\"line\"> \t\tdestroy 清理工作 (关闭定时器、集合清空..)</span><br><span class=\"line\"></span><br><span class=\"line\"> \t\tbeforeCreate/created</span><br><span class=\"line\"> \t\tbeforeMount/mounted</span><br><span class=\"line\"> \t\tbeforeUpdate/updated</span><br><span class=\"line\"> \t\tbeforeDestroy/destroyed</span><br></pre></td></tr></table></figure>\n<h3 id=\"五、常用属性：\"><a href=\"#五、常用属性：\" class=\"headerlink\" title=\"五、常用属性：\"></a>五、常用属性：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、watch</span><br><span class=\"line\">           ① 表单元素的双向数据绑定</span><br><span class=\"line\">\t   v-model=<span class=\"string\">\"myValue\"</span></span><br><span class=\"line\">\t   ②监听</span><br><span class=\"line\">\t    watch:&#123;</span><br><span class=\"line\">\t\tmyValue:<span class=\"keyword\">function</span>(newValue,oldValue)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t2、computed</span><br><span class=\"line\">\t\t计算属于是用于在模板中，搞定复杂的业务逻辑，因为有依赖缓存。</span><br><span class=\"line\">\t\t①指定计算属性</span><br><span class=\"line\">\t\t\tcomputed:&#123;</span><br><span class=\"line\">\t\t\t  myHandle:<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">\t\t\t   <span class=\"built_in\">return</span> 数据</span><br><span class=\"line\">\t\t\t  &#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t②调用</span><br><span class=\"line\">\t\t\t&lt;any&gt;&#123;&#123;myHandle&#125;&#125;&lt;/any&gt;</span><br></pre></td></tr></table></figure>","text":"总结以上所掌握的指令：1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>v-for<br>v-if<br>v-else-if<br>v-else<br>v-on: @<br>v-bind: :<br>v-model<br>v-show<br","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"框架知识点01","slug":"xiao01","date":"2018-02-23T12:11:38.683Z","updated":"2018-03-11T04:37:57.757Z","comments":true,"path":"api/articles/xiao01.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"框架的好处\"><a href=\"#框架的好处\" class=\"headerlink\" title=\"框架的好处\"></a>框架的好处</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①提到代码的质量，开发速度</span><br><span class=\"line\">②提高代码的复用率</span><br><span class=\"line\">③降低模块之间的耦合度 （高内聚低耦合）</span><br><span class=\"line\">UI：user interface</span><br><span class=\"line\">GUI : graphical user interface</span><br><span class=\"line\">CLI : <span class=\"built_in\">command</span> line interface</span><br><span class=\"line\">API : application interface</span><br></pre></td></tr></table></figure>\n<h3 id=\"在webStorm中创建一个模板的基本步骤：\"><a href=\"#在webStorm中创建一个模板的基本步骤：\" class=\"headerlink\" title=\"在webStorm中创建一个模板的基本步骤：\"></a>在webStorm中创建一个模板的基本步骤：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①准备模板内容 全部选中 复制</span><br><span class=\"line\">②点击左上角的file -&gt; new -&gt; edit file templates</span><br><span class=\"line\">③点击弹窗中左上角+</span><br><span class=\"line\">④在输入框当中分别输入 模板名称、模板结尾的格式、模板内容</span><br><span class=\"line\">⑤点击ok ，保存，下次就可以使用</span><br></pre></td></tr></table></figure>\n<h3 id=\"一、Vue概述\"><a href=\"#一、Vue概述\" class=\"headerlink\" title=\"一、Vue概述\"></a>一、Vue概述</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、what\t</span><br><span class=\"line\">\t是一个渐进式的构建用户界面的js框架</span><br><span class=\"line\">2、<span class=\"built_in\">where</span></span><br><span class=\"line\">\t小到的简单的表单处理，大到复杂的数据操作比较频繁的单页面应用程序</span><br><span class=\"line\">3、why</span><br><span class=\"line\">\t①方便阅读的中文文档</span><br><span class=\"line\">\t②容易上手 （学习曲线比较缓和）</span><br><span class=\"line\">\t③体积小</span><br><span class=\"line\">\t④基于组件化的开发方式</span><br><span class=\"line\">\t⑤代码的可读性、可维护性得到了提高</span><br><span class=\"line\">4、how</span><br><span class=\"line\">\t工作方式：可以通过丰富的指令扩展模板，可以通过各种各样的插件来增强功能</span><br><span class=\"line\"></span><br><span class=\"line\">\t搭建环境：</span><br><span class=\"line\">\t方式1</span><br><span class=\"line\">\t\t 全局安装 vue-cli</span><br><span class=\"line\">\t\t$ npm install --global vue-cli</span><br><span class=\"line\">\t\t<span class=\"comment\"># 创建一个基于 webpack 模板的新项目</span></span><br><span class=\"line\">\t\t$ vue init webpack my-project</span><br><span class=\"line\">\t\t<span class=\"comment\"># 安装依赖，走你</span></span><br><span class=\"line\">\t\t$ <span class=\"built_in\">cd</span> my-project</span><br><span class=\"line\">\t\t$ npm install</span><br><span class=\"line\">\t\t$ npm run dev</span><br><span class=\"line\">\t方式2:</span><br><span class=\"line\">\t\t直接引入对应的js文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、Vue中基础知识：\"><a href=\"#二、Vue中基础知识：\" class=\"headerlink\" title=\"二、Vue中基础知识：\"></a>二、Vue中基础知识：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、双花括号</span><br><span class=\"line\">\tmustache(胡子)/interpolation（插值表达式）</span><br><span class=\"line\"></span><br><span class=\"line\">\t语法：</span><br><span class=\"line\">\t&lt;any&gt;&#123;&#123;表达式&#125;&#125;&lt;/any&gt;</span><br><span class=\"line\">\t作用：</span><br><span class=\"line\">\t将表达式执行的结果 输出当调用元素的innerHTML中；还可以将数据绑定到视图</span><br><span class=\"line\"></span><br><span class=\"line\">\t练习：</span><br><span class=\"line\">\tdemo03_lianxi.html的文件</span><br><span class=\"line\"></span><br><span class=\"line\">\t希望通过Vue去初始化一个学生对象(name/score)数组(5个)</span><br><span class=\"line\"></span><br><span class=\"line\">\t将学生数组 渲染在table中</span><br><span class=\"line\"></span><br><span class=\"line\">2、指令-循环指令</span><br><span class=\"line\">\t基本语法1：</span><br><span class=\"line\">\t&lt;any v-for=<span class=\"string\">\"tmp in array\"</span>&gt;&lt;/any&gt;</span><br><span class=\"line\">\t基本语法2：</span><br><span class=\"line\">\t&lt;any v-for=<span class=\"string\">\"(value,index) in array\"</span>&gt;&lt;/any&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t作用：</span><br><span class=\"line\">\t在遍历array这个集合时，将临时变量保存在tmp中，创建多个any标签</span><br><span class=\"line\"></span><br><span class=\"line\">3、指令-选择指令</span><br><span class=\"line\">\t语法：</span><br><span class=\"line\">\t  &lt;any v-if=<span class=\"string\">\"表达式\"</span>&gt;&lt;/any&gt;</span><br><span class=\"line\">\t  &lt;any v-else-if=<span class=\"string\">\"表达式\"</span>&gt;&lt;/any&gt;</span><br><span class=\"line\">\t  &lt;any v-else=<span class=\"string\">\"表达式\"</span>&gt;&lt;/any&gt;</span><br><span class=\"line\">\t作用：</span><br><span class=\"line\">\t  根据表达式执行结果的真假，来决定是否要将当前的这个元素 挂载到DOM树</span><br><span class=\"line\"></span><br><span class=\"line\">\t练习：demo06_lianxi.html </span><br><span class=\"line\">\t通过v-for v-if来重构demo03_lianxi</span><br><span class=\"line\"></span><br><span class=\"line\">\t要求：只显示成绩及格的同学</span><br><span class=\"line\">\t&lt;tr v-for=<span class=\"string\">\"stu in stuList\"</span> v-if=<span class=\"string\">\"stu.score &gt;= 60\"</span>&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">4、指令-事件绑定</span><br><span class=\"line\">\t语法：</span><br><span class=\"line\">\t\t&lt;any v-on:eventName=<span class=\"string\">\"handleEvent\"</span>&gt;&lt;/any&gt;</span><br><span class=\"line\">\t作用：</span><br><span class=\"line\">\t\t给指定的元素 将handleEvent的方法绑定给指定eventName事件</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t练习：</span><br><span class=\"line\">\tdemo08_lianxi.html</span><br><span class=\"line\"></span><br><span class=\"line\">\t在data中初始化一个整形数组（3条数据：100,200,300）</span><br><span class=\"line\"></span><br><span class=\"line\">\t视图：将数组展示在ul，在ul的下边添加上一个按钮：加载更多；</span><br><span class=\"line\"></span><br><span class=\"line\">\t在点击按钮时，ul中的尾部追加一条新的随机数显示li</span><br><span class=\"line\"></span><br><span class=\"line\">5、指令-属性绑定</span><br><span class=\"line\">  基本语法：</span><br><span class=\"line\">\t&lt;any v-bind:myProp=<span class=\"string\">\"表达式\"</span>&gt;&lt;/any&gt;</span><br><span class=\"line\">\t补充，支持简写：</span><br><span class=\"line\">\t&lt;any :myProp=<span class=\"string\">\"表达式\"</span>&gt;&lt;/any&gt;</span><br><span class=\"line\">  作用：</span><br><span class=\"line\">\t将表达式执行的结果 绑定 到当前元素的myProp属性</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;img v-bind:src=<span class=\"string\">\"'img/'+myImg\"</span> alt=<span class=\"string\">\"\"</span>&gt;</span><br><span class=\"line\">   动态样式绑定</span><br><span class=\"line\">\t&lt;p :style=<span class=\"string\">\"&#123;backgroundColor:myBGColor&#125;\"</span>&gt;动态样式绑定&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   动态样式类绑定</span><br><span class=\"line\">\t  &lt;h1 :class=<span class=\"string\">\"&#123;myRed:false&#125;\"</span>&gt;动态样式类的绑定&lt;/h1&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">6、指令-双向数据绑定</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、组件化：\"><a href=\"#三、组件化：\" class=\"headerlink\" title=\"三、组件化：\"></a>三、组件化：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件：组件就是可被反复使用的，带有特定功能的视图</span><br><span class=\"line\"></span><br><span class=\"line\">所谓的组件化，就像玩积木一样，把封装的组件进行复用,把积木（组件）拼接在一起，构成一个复杂的页面应用程序。</span><br><span class=\"line\"></span><br><span class=\"line\">组件树就是由各个组件构成的一种数据结构，它存在的意义是为了帮梳理应用程序</span><br><span class=\"line\"></span><br><span class=\"line\">1、组件的创建</span><br><span class=\"line\">  ①全局组件</span><br><span class=\"line\">\tVue.component(<span class=\"string\">'my-com'</span>,&#123;</span><br><span class=\"line\">\t  template:`</span><br><span class=\"line\">\t    &lt;h2&gt;it is a header&lt;/h2&gt;</span><br><span class=\"line\">\t  `</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">         ②局部组件</span><br><span class=\"line\">\tnew Vue(&#123;</span><br><span class=\"line\">\t\tcomponents:&#123;</span><br><span class=\"line\">  \t\t\t <span class=\"string\">'my-footer'</span>:&#123;</span><br><span class=\"line\">\t\t   template:<span class=\"string\">''</span></span><br><span class=\"line\">\t\t &#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">2、组件使用</span><br><span class=\"line\">\t作为普通的标签去使用</span><br><span class=\"line\">\t&lt;my-com&gt;&lt;/my-com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3、注意事项</span><br><span class=\"line\">\t①组件的id和使用方式 遵循烤串式命名方式：a-b-c </span><br><span class=\"line\">\t②如果一个组件 要渲染多个元素，将多个元素放在一个顶层标签中，比如div、form</span><br><span class=\"line\">\t③全局组件可以用在id为example的范围内的任何一个组件内部，直接调用可以；但是局部组件只能在父模板中直接调用</span><br></pre></td></tr></table></figure>","text":"框架的好处1<br>2<br>3<br>4<br>5<br>6<br>7<br>①提到代码的质量，开发速度<br>②提高代码的复用率<br>③降低模块之间的耦合度 （高内聚低耦合）<br>UI：user interface<br>GUI : graphical user inte","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}