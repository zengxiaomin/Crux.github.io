{"title":"框架知识点04","slug":"xiao04","date":"2018-03-11T04:46:13.923Z","updated":"2018-03-11T05:08:01.461Z","comments":true,"path":"api/articles/xiao04.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h3 id=\"一、路由模块\"><a href=\"#一、路由模块\" class=\"headerlink\" title=\"一、路由模块\"></a>一、路由模块</h3><figure class=\"highlight plain\"><figcaption><span>就是建立起url和页面之间的映射关系</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1、SPA的基本概念和工作原理</span><br><span class=\"line\"></span><br><span class=\"line\">\tSPA：single page application 单一页面应用程序，只有一个完整的页面；它在加载页面时，不会加载整个页面，而是只更新某个指定的容器中内容。</span><br><span class=\"line\">\t比如Gmail、移动的webApp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t工作原理：</span><br><span class=\"line\">\t①解析地址栏</span><br><span class=\"line\">\t\t完整的页面地址、路由地址</span><br><span class=\"line\">\t②根据路由地址 从路由词典中找到真正的要加载的页面</span><br><span class=\"line\">\t③发起ajax请求</span><br><span class=\"line\">\t\t请求要加载的页面</span><br><span class=\"line\">\t④像指定的容器中 插入加载来的页面</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2、路由模块的基本使用</span><br><span class=\"line\">\t专业术语：</span><br><span class=\"line\">\t\trouter路由器</span><br><span class=\"line\">\t\troute路由</span><br><span class=\"line\">\t\troutes 路由数组（路由词典）</span><br><span class=\"line\">\t①引入vue.js vue-router.js</span><br><span class=\"line\">\t②指定一个容器</span><br><span class=\"line\">\t&lt;router-view&gt;&lt;/router-view&gt;</span><br><span class=\"line\">\t③创建业务所需要用到的组件类</span><br><span class=\"line\">        \tvar MyLogin = Vue.component()</span><br><span class=\"line\">\t④配置路由词典</span><br><span class=\"line\">\t const myRoutes = [</span><br><span class=\"line\">\t  &#123;path:&apos;&apos;,component:MyLogin&#125;,</span><br><span class=\"line\">\t  &#123;path:&apos;/login&apos;,component:MyLogin&#125;</span><br><span class=\"line\">\t ];</span><br><span class=\"line\"></span><br><span class=\"line\">\t const myRouter = new VueRouter(&#123;</span><br><span class=\"line\">\t  routes:myRoutes</span><br><span class=\"line\">\t &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t new Vue(&#123;</span><br><span class=\"line\">\t   router:myRouter</span><br><span class=\"line\">\t &#125;)</span><br><span class=\"line\">\t⑤测试</span><br><span class=\"line\">\t\t修改地址栏中的路由地址，测试看加载的组件是否正确</span><br><span class=\"line\"></span><br><span class=\"line\">\t注意事项：</span><br><span class=\"line\">\t ①先引入vue，再引入插件</span><br><span class=\"line\">\t ②一定要指定router-view</span><br><span class=\"line\">\t ③route路由 &#123;path:&apos;&apos;,component:&#125;</span><br><span class=\"line\">\t  routes 路由数组 []</span><br><span class=\"line\">\t  router 路由器:按照指定的路由规则去访问对应的组件 new VueRouter</span><br><span class=\"line\"></span><br><span class=\"line\">\t练习：demo02_lianxi.html</span><br><span class=\"line\">\t创建一个SPA，有两个组件类，分别是login,main.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3、使用路由模块来实现页面跳转的方式</span><br><span class=\"line\"></span><br><span class=\"line\">\t方式1：直接修改地址栏</span><br><span class=\"line\">\t方式2：js</span><br><span class=\"line\">\tthis.$router.push(‘路由地址’);</span><br><span class=\"line\">\t方式3：</span><br><span class=\"line\">\t &lt;router-link</span><br><span class=\"line\">\t to=&quot;路由地址&quot;&gt;&lt;/router-link&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">4、完成参数的传递</span><br><span class=\"line\">\t在页面之间跳转的时候，在有些场景下，需要同时指定参数</span><br><span class=\"line\"></span><br><span class=\"line\">\t①明确发送方和接收方</span><br><span class=\"line\">\tlist --20--&gt; detail</span><br><span class=\"line\">\t②配置接收方的路由地址</span><br><span class=\"line\">\t/detail --》 /detail/:index</span><br><span class=\"line\"></span><br><span class=\"line\">\tthis.$route.params.index</span><br><span class=\"line\">\t③发送</span><br><span class=\"line\">\trouterLink to=&quot;/detail/20&quot;</span><br><span class=\"line\">\tthis.$router.push(&apos;/detail/20&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t练习：demo05_lianxi.html</span><br><span class=\"line\">\tSPA，有3个组件：</span><br><span class=\"line\">\tcheck/pay/send</span><br><span class=\"line\">\tcheck:button 点击跳转到pay,同时传递商品价格100给pay</span><br><span class=\"line\">\tpay: h1 显示商品价格信息 button 点击跳转send</span><br><span class=\"line\">\tsend: routerLink--&gt;check</span><br><span class=\"line\"></span><br><span class=\"line\">\t步骤1:搭建架子，要求通过不同的url能够访问3个组件</span><br><span class=\"line\">\t步骤2：搞定跳转</span><br><span class=\"line\">\t步骤3：搞定传参</span><br><span class=\"line\">\t\t①明确发送方和接收方</span><br><span class=\"line\">\t\tcheck（发送） pay(接受)</span><br><span class=\"line\">\t\t②配置pay的路由地址</span><br><span class=\"line\">\t\t/pay --&gt; /pay/:price</span><br><span class=\"line\">\t\tthis.$route.params.price</span><br><span class=\"line\">\t\t③跳转的同时发送</span><br><span class=\"line\"></span><br><span class=\"line\">5、路由嵌套</span><br><span class=\"line\">\t在一个路由中，path对应一个component，如果这个component需要根据不同的url再加载其他的component，称之为路由的嵌套</span><br><span class=\"line\"></span><br><span class=\"line\">\t举例：比如A组件现在需要根据不同的url，加载B组件或者C组件</span><br><span class=\"line\">\t①给A组件指定一个容器</span><br><span class=\"line\">\t  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class=\"line\">\t②配置路由词典</span><br><span class=\"line\">\t  &#123;</span><br><span class=\"line\">\t    path:&apos;/a&apos;,</span><br><span class=\"line\">\t    component:A,</span><br><span class=\"line\">\t    children:[</span><br><span class=\"line\">\t      &#123;path:&apos;/b&apos;,component:B&#125;</span><br><span class=\"line\">\t    ]</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t  需求：现在有两个组件，分别是login/mail,建立SPA。</span><br><span class=\"line\">\t  在此基础上，希望mail组件 嵌套inbox/outbox/draft</span><br><span class=\"line\"></span><br><span class=\"line\">\t  补充：在设置子路由，路由匹配规则依然是适用的，只不过路由地址为空和异常，要携带父组件的路由地址</span><br><span class=\"line\">\t  /mail /mail/draft</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、与远程服务器端的通信\"><a href=\"#二、与远程服务器端的通信\" class=\"headerlink\" title=\"二、与远程服务器端的通信\"></a>二、与远程服务器端的通信</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①引入vue-resouce.js</span><br><span class=\"line\">\t②发请求</span><br><span class=\"line\">\t\tthis.<span class=\"variable\">$http</span>.get(url).<span class=\"keyword\">then</span>((result)=&gt;&#123;</span><br><span class=\"line\">\t\t\t//result.data</span><br><span class=\"line\">\t\t&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"一、自定义指令\"><a href=\"#一、自定义指令\" class=\"headerlink\" title=\"一、自定义指令\"></a>一、自定义指令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、创建和使用</span><br><span class=\"line\">   \t Vue.directive(<span class=\"string\">'change'</span>,&#123;</span><br><span class=\"line\">   \t\t<span class=\"built_in\">bind</span>:<span class=\"keyword\">function</span>(el,bindings)&#123;</span><br><span class=\"line\">   \t\t//首次调用</span><br><span class=\"line\">   \t\t&#125;,</span><br><span class=\"line\">   \t\tupdate:<span class=\"keyword\">function</span>(el,bindings)&#123;</span><br><span class=\"line\">   \t\t//只要是有数据变化，都会调用</span><br><span class=\"line\">   \t\t&#125;,</span><br><span class=\"line\">   \t\tunbind:<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">   \t\t//解绑</span><br><span class=\"line\">   \t\t&#125;</span><br><span class=\"line\">   \t &#125;)</span><br><span class=\"line\">   \t &lt;any v-change=<span class=\"string\">\"count\"</span>&gt;&lt;/any&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、搭建基于CLI开发环境的方式\"><a href=\"#三、搭建基于CLI开发环境的方式\" class=\"headerlink\" title=\"三、搭建基于CLI开发环境的方式\"></a>三、搭建基于CLI开发环境的方式</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①指定一个文件夹</span><br><span class=\"line\">②下载安装包拷贝到project（自己指定文件）中</span><br><span class=\"line\">③右键单击压缩包，解压缩到当前文件夹</span><br><span class=\"line\">④进入到环境文件夹</span><br><span class=\"line\">⑤同时按下<span class=\"built_in\">shift</span>和鼠标右键，选择在此位置打开命令行串口</span><br><span class=\"line\">⑥执行npm install</span><br><span class=\"line\">⑦执行npm start</span><br></pre></td></tr></table></figure>\n<h3 id=\"四、项目的大致流程\"><a href=\"#四、项目的大致流程\" class=\"headerlink\" title=\"四、项目的大致流程\"></a>四、项目的大致流程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①需求分析</span><br><span class=\"line\">②可行性分析</span><br><span class=\"line\">③概要设计、详细设计</span><br><span class=\"line\">④编码 ui <span class=\"built_in\">test</span></span><br><span class=\"line\">⑤联合调试 <span class=\"built_in\">test</span></span><br><span class=\"line\">⑥上线</span><br><span class=\"line\">⑦迭代、维护</span><br></pre></td></tr></table></figure>","categories":[],"tags":[]}